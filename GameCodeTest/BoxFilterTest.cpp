//
//  BoxFilterTest.cpp
//  GameCodeTest
//
//  Created by Jinho Yoo on 10/8/14.
//  Copyright (c) 2014 Jinho Yoo. All rights reserved.
//

#include <iostream>
#include <vector>
#include <string>
#include "gtest/gtest.h"

#define MIN(a,b) (((a)<(b))?(a):(b))
#define MAX(a,b) (((a)>(b))?(a):(b))


//Generated by Python script.
//===============================
//import random
//
//my_randoms=[]
//for i in range (20*20):
//my_randoms.append( random.uniform(1,10) )
//
//print (my_randoms)

const int gWidth = 20;
const int gHeight = 20;

float gTwoDArray[] = { 4.318797407324599, 3.087788067624083, 1.1943658087838842, 4.522841803072204, 9.585793500971704, 5.308432834426607, 4.392731493123501, 5.427011219539522, 5.94528547558402, 4.8821131021287085, 5.966858330868893, 1.386067000513636, 5.382071974207015, 5.725832927826309, 7.688277899279814, 1.1173381671698177, 8.423963930957347, 8.61251750114991, 9.3054422149013, 1.432162776815359, 8.771972612305397, 4.744497413542269, 2.314658438885297, 4.864440463348128, 6.7556393743158, 7.003211313492773, 1.947408143687326, 4.0581617050218926, 2.4662883677683047, 7.72501620697001, 3.5932820188667685, 2.618632572221713, 7.22988983651021, 5.373498733075692, 1.7819284197879015, 4.606539441111947, 3.8328764480625024, 8.526673604445769, 4.718266905699643, 7.339923427050374, 8.488218656171231, 1.3853046052417501, 8.248532163476344, 3.4391740646602655, 1.7433688056684251, 1.9365776780962922, 5.702428642073507, 3.068313448332688, 8.6131516821371, 1.4234165979097326, 9.150452107714015, 7.6284878953507, 5.24511334613447, 6.752521939903607, 2.7494926494588827, 2.9814507744444976, 5.24097441816358, 8.45162435849353, 4.944240396165042, 4.875872733603627, 3.1175521565944995, 4.741470495610191, 5.848553806225433, 2.118761970499804, 4.042547982799734, 7.1171773070578865, 8.001614436231307, 5.10673573388555, 2.2885403736457146, 4.340027038568826, 4.307910907745833, 4.412206142923116, 5.915008693446918, 7.957770597401278, 4.698306687111575, 4.746885675713813, 8.454139553428696, 8.92551740423395, 2.381665481336226, 2.4214893152581296, 9.265684025499324, 6.5337173346084505, 4.753205380264678, 7.859704454182403, 4.717497773633687, 1.1579149793273757, 1.9143683075493922, 2.622908732301738, 5.148780893849654, 1.5330763210587106, 6.4918794515560965, 5.149197494336719, 8.87128440574665, 2.71416718426818, 9.187524622513871, 5.50586020281856, 4.327685717027313, 5.194869351601245, 3.1171808483296495, 8.192683461159957, 6.397900331117179, 2.0125566008123776, 3.10049921947233, 7.073298526798305, 2.5219458241653214, 8.217111584143852, 4.639024718454215, 8.813978253389909, 9.578395454950254, 5.492953529783754, 7.723421851689978, 4.97738721862274, 9.008711645430854, 9.87352865290027, 8.596129662196887, 3.4286506845013958, 3.429463745521113, 5.296931640880475, 5.116569144182921, 1.4960583089222625, 5.729419523130475, 4.235710327391916, 8.93456468383904, 6.754287865969344, 3.990892742085785, 6.809409518528627, 2.9187244152200287, 9.360511181633703, 9.920635066831657, 1.5895562185483407, 9.19787597722228, 7.35138146956907, 4.818876452213985, 9.302288363936102, 4.992777792229805, 4.636248597517158, 1.1268513635591493, 9.08228558378102, 1.4698096192115466, 6.116613253724665, 2.5155465840164997, 5.241236232144429, 8.351831011289987, 8.504629210432139, 1.028565582527956, 9.586202174767564, 1.676955068859987, 2.556693046338207, 9.061590127289572, 7.967692529854008, 9.876450451075838, 8.76028278114667, 5.6065496329117455, 1.3104047882510728, 6.728479178697079, 4.333164994260289, 5.462467461627422, 7.732363073089298, 7.303901912188744, 2.7957289389137445, 6.959212500890428, 4.749926906337906, 9.053266805942446, 9.17720578274155, 2.151503041615733, 4.77843418680391, 5.365302091644619, 6.600796788947974, 2.147172696959469, 4.009050172602468, 8.086911152420225, 5.2204711570333915, 5.539038760791871, 5.663766302427123, 7.7393877595705565, 8.098814449904465, 7.504721087592982, 8.63308983277891, 7.369802256370611, 7.258679408117965, 4.140922462145057, 2.7128427751472453, 5.446110112395481, 5.533873508595887, 1.841283725596681, 9.348690621806757, 8.854160673243126, 9.561707188293514, 3.199327246548086, 6.768654680623927, 2.6884885999629633, 2.8786321935595303, 4.745208143481809, 3.131958884693232, 3.738873944135171, 5.104500099286019, 8.140786680830754, 5.337997173805586, 3.6832812202441434, 5.444447137346166, 8.857964166729346, 5.804004407149841, 1.0445412173002726, 3.007869221995208, 4.884057371144753, 9.586045228890603, 4.13424159496101, 6.099093462553549, 3.9039540821137066, 7.070944266397848, 2.6742016123422814, 4.208653569911791, 5.349994208355188, 8.218056922483054, 5.537189487834, 2.1415066970425256, 8.065365197452056, 7.920393664507411, 4.616592847146642, 3.9924002479934275, 2.3011212990286465, 5.14800602819712, 4.369996758862623, 7.911970347446966, 1.9344755720455897, 3.801273864625278, 9.796677949185668, 3.1615652114252244, 6.324559992621958, 9.334992646432768, 1.1152518737812347, 7.195588012300543, 9.44102445528156, 1.1851004029383663, 6.658259056790058, 5.824123411453039, 4.819422321810022, 6.258529757264821, 4.529664815211868, 8.519157967647896, 5.157006037078842, 6.473288968002933, 9.930559948770671, 7.577356775014698, 8.203998681077856, 1.127118173914019, 9.395775398081877, 7.03913833953846, 6.304161246120252, 1.076449371145268, 8.68738807332806, 1.8668956476977443, 9.678151061417637, 4.644389212094955, 5.61543408187938, 1.0473277558736955, 8.248460962819504, 4.449229275805191, 1.9950826205359964, 1.3587077467276352, 3.10404858568865, 9.281925690522797, 3.7556737623308685, 2.253018792626865, 5.182325820529609, 5.503915786936717, 5.580327777022848, 7.850238501320523, 7.866901158101909, 3.179201743208897, 4.973880680709428, 6.543896542980579, 5.486215595974944, 3.2002890518289693, 8.819068827470174, 7.691265324921545, 5.7110752470681065, 6.422260387725693, 7.965783138963486, 8.48412583666156, 4.40890828276034, 1.2076751180748475, 3.443080270137721, 4.149281076393367, 7.809806882807328, 3.287754890939171, 7.468138109246418, 1.17483731803267, 3.2839721190949565, 4.294029857551101, 8.515246802814953, 2.930881207646262, 4.325415907036012, 9.804734217801267, 8.656458664140484, 1.8512571260450863, 1.8747599375324073, 6.687464286480873, 9.424105545470091, 9.591581214482016, 8.898114140732451, 2.202243150746846, 7.169889023032395, 4.682823902745498, 9.380022749328704, 3.0786024951656374, 6.197623238639685, 1.5278437634796567, 1.548615388745133, 5.337279344988155, 5.640971585556651, 9.78116912197681, 8.37186730065666, 8.110142728323904, 7.288446145128837, 4.280825554575099, 8.914399776053614, 6.5199302381178805, 9.28976903418256, 7.5800241334037874, 6.08940799599603, 5.956697383821542, 4.517925135015581, 4.700265744393325, 3.361316387189687, 6.344488216360113, 6.0210181865467645, 6.317887859482862, 4.521045214134696, 6.800866610232443, 4.212483391945011, 4.01029180099918, 9.90871383716421, 2.8197173245821725, 5.711014615257799, 3.14784670445037, 9.133310426044966, 5.53472241127229, 4.525824837880281, 8.06693795734902, 9.676113579599967, 1.1797749818699292, 5.629401969327957, 4.491355994519454, 9.274145188769051, 3.3057242592731972, 4.921376394666554, 5.281001163091725, 5.775921771639703, 8.593701116685995, 8.76295986548151, 1.2870372434547428, 5.449800003667994, 4.823691879692584, 3.377847511070981, 5.96121867205164, 1.3257454278929757, 4.307880868259584, 3.857395130805367, 1.6186109103011135, 2.794735082911019, 1.3892367523692237, 8.671964479409064, 5.567043262727509, 3.142801986468228, 1.9240143517409158, 5.0727311316129615, 2.22765115707357, 3.565119410581273, 3.0304856561267037, 2.623575777626997, 8.910462956471168, 5.032209694814453, 7.696316273685243, 1.9349582416395759, 7.8338430179013905, 1.0102487226387984, 8.755282599643131, 4.206134988783431, 8.91303804663847, 7.46038855175358, 6.214458715467501, 6.872833601884523, 8.917479989906607, 8.306391209092286, 6.6046242218445, 7.273742030704831, 1.542608531462463, 1.105617990116303, 9.341194144968782, 2.1110782632793925, 5.413141960662705, 6.5809945458084815, 9.739119175677258, 8.206767664178441, 7.084681030440497, 9.088109145465133, 3.331625644044344, 7.65989989229897, 9.254103035910365 };


//Original box filter
void BoxFilter(int filterSize,
               const float* input, int width, int height,
               float* output){
    
    for (int x = 0; x < width; ++x){
        for (int y = 0; y < height; ++y){
            
            float sum = 0.f;
            for (int ix = -filterSize; ix <= filterSize; ++ix) {
                for (int iy = -filterSize; iy <= filterSize; ++iy) {
                    int sampleX = MIN(MAX(0, x + ix + filterSize), width - 1);
                    int sampleY = MIN(MAX(0, y + iy + filterSize), height - 1);
                    sum += input[sampleY * width + sampleX];
                }
            }
            output[y * width + x] = sum / (filterSize * filterSize);
        }
    }
}

//Optimized  box filter
void BoxFilterOpt(int filterSize,
               const float* input, int width, int height,
               float* output){
    
    for (int x = 0; x < width; ++x){
        for (int y = 0; y < height; ++y){
            
            float sum = 0.f;
            for (int ix = -filterSize; ix <= filterSize; ++ix) {
                for (int iy = -filterSize; iy <= filterSize; ++iy) {
                    int sampleX = MIN(MAX(0, x + ix + filterSize), width - 1);
                    int sampleY = MIN(MAX(0, y + iy + filterSize), height - 1);
                    sum += input[sampleY * width + sampleX];
                }
            }
            output[y * width + x] = sum / (filterSize * filterSize);
        }
    }
}




//Test fixture
class BoxFilterTest : public testing::Test {
protected:
    virtual void SetUp() {
        _pTwoDArray = gTwoDArray;
        _pOutputArray = new float[ gWidth* gHeight];
    }
    
    virtual void TearDown() {
        
        delete [] _pOutputArray;
    }
    
public:
    float* _pTwoDArray;
    float* _pOutputArray;
    
};


TEST_F( BoxFilterTest, Original)
{
    const int filterSize = 3;
    
    for ( int i=0; i<999; ++i) {

        BoxFilter( filterSize,
                  _pTwoDArray, gWidth, gHeight,
                  _pOutputArray);
    }
    
}

TEST_F( BoxFilterTest, Optimized)
{
    const int filterSize = 3;
    
    for ( int i=0; i<999; ++i) {
        
        BoxFilterOpt( filterSize,
                  _pTwoDArray, gWidth, gHeight,
                  _pOutputArray);
    }
    
}
